@model BrewArea.COM.RecipeIndexViewModel

@{
    ViewBag.Title = "Edit Recipe";
}

<h2>Edit Recipe</h2>

<!-- Box sizelar ayarlanacak
     item nameler ayarlanacak-->



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.RecipeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeerDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeerDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BeerDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BeerMake, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeerMake, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BeerMake, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeerType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-combobox/1.1.8/css/bootstrap-combobox.min.css">
                <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-combobox/1.1.8/js/bootstrap-combobox.min.js"></script>

                <input type="text" id="BeerTypeId" name="BeerType" list="beerTypeList" autocomplete="off" class = "form-control">
                <datalist id="beerTypeList">
                    @foreach (var item in ViewBag.BeerTypes)
                    {
                        <option value="@item.Value"> @item.Value</option>
                    }
                </datalist>
            </div>
        </div>

        <table class="table">
            <tr>
                <th>
                    Ingredient Name
                </th>
                <th>
                    Item Amount
                </th>
                <th>
                    Measurement Type
                </th>
            </tr>
            @foreach (var item in Model.Ingredients)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IngredientName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MeasurementType)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditIngridient", new { id = Model.RecipeId, ingredient = item }) |
                        @Html.ActionLink("Delete", "DeletIngridient", new { id = Model.RecipeId, ingredient = item })
                    </td>
                </tr>
            }
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('.combobox').combobox();

            $('.combobox').combobox({ bsVersion: '2' });
            // bonus: add a placeholder
            $('.combobox').attr('placeholder', 'For example, start typing "Pennsylvania"');
        });
    </script>

}
